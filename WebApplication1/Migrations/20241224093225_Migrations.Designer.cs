// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(KindergartenDbContext))]
    [Migration("20241224093225_Migrations")]
    partial class Migrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Group", b =>
                {
                    b.Property<long>("GropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GropId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("GropId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("WebApplication1.Models.Kid", b =>
                {
                    b.Property<long>("KidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("KidId"));

                    b.Property<long>("GropId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupGropId")
                        .HasColumnType("bigint");

                    b.Property<int>("KidMoney")
                        .HasColumnType("int");

                    b.Property<string>("KidName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KidId");

                    b.HasIndex("GroupGropId");

                    b.ToTable("Kids");
                });

            modelBuilder.Entity("WebApplication1.Models.Service", b =>
                {
                    b.Property<long>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ServiceId"));

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("ServiceId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("WebApplication1.Models.Teacher", b =>
                {
                    b.Property<long>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TeacherId"));

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("WebApplication1.Models.Group", b =>
                {
                    b.HasOne("WebApplication1.Models.Teacher", "Teacher")
                        .WithMany("Groups")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("WebApplication1.Models.Kid", b =>
                {
                    b.HasOne("WebApplication1.Models.Group", "Group")
                        .WithMany("Kids")
                        .HasForeignKey("GroupGropId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("WebApplication1.Models.Service", b =>
                {
                    b.HasOne("WebApplication1.Models.Teacher", "Teacher")
                        .WithMany("Services")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("WebApplication1.Models.Group", b =>
                {
                    b.Navigation("Kids");
                });

            modelBuilder.Entity("WebApplication1.Models.Teacher", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
